{
  "address": "0x0FD0f69bA8B5EaE9F10D63C3b151C5eEcB182523",
  "abi": [
    {
      "inputs": [],
      "name": "BuyMeACoffe__BalanceIsZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BuyMeACoffe__NotSignedUpBefore",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BuyMeACoffe__SenderShouldBeAnotherAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BuyMeACoffe__SignedUpBefore",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BuyMeACoffe__TransferFaild",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BuyMeACoffe__ValueMustBeMoreThanOneGwei",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "MemoEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "SingUpEvent",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "buyACoffee",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastMemo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "message",
              "type": "string"
            }
          ],
          "internalType": "struct BuyMeACoffee.Memo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "singUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x6d6b6a16586e961a5b8487996ff62547f76d7a58543b9fd79ebab5220b15aa5c",
  "receipt": {
    "to": null,
    "from": "0x6bEDAb3A759245A16ABeb16e2142629828C8c782",
    "contractAddress": "0x0FD0f69bA8B5EaE9F10D63C3b151C5eEcB182523",
    "transactionIndex": 67,
    "gasUsed": "1156935",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x50d82109778cd387cf1eef1eff18eb093a8bbe62fc4d8d66a15b93aec18a6155",
    "transactionHash": "0x6d6b6a16586e961a5b8487996ff62547f76d7a58543b9fd79ebab5220b15aa5c",
    "logs": [],
    "blockNumber": 5758678,
    "cumulativeGasUsed": "10101131",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 5,
  "solcInputHash": "c0f5fd748cc69869ecab00ec358ee298",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BuyMeACoffe__BalanceIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BuyMeACoffe__NotSignedUpBefore\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BuyMeACoffe__SenderShouldBeAnotherAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BuyMeACoffe__SignedUpBefore\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BuyMeACoffe__TransferFaild\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BuyMeACoffe__ValueMustBeMoreThanOneGwei\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"MemoEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"SingUpEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"buyACoffee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastMemo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"internalType\":\"struct BuyMeACoffee.Memo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getUser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"singUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"mohammad norouzi\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"MINIMUN_COFFEE_PRICE\":{\"details\":\"set a minimum amount for coffe price\"},\"s_users\":{\"details\":\"Mapping of address to users struct\"}},\"title\":\"BuyMeACoffee contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract implements the BuyMeACoffee contract and its functionality as simple as possible\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BuyMeACoffee.sol\":\"BuyMeACoffee\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BuyMeACoffee.sol\":{\"content\":\"// Layout of Contract:\\r\\n// version\\r\\n// imports\\r\\n// errors\\r\\n// interfaces, libraries, contracts\\r\\n// Type declarations\\r\\n// State variables\\r\\n// Events\\r\\n// Modifiers\\r\\n// Functions\\r\\n\\r\\n// Layout of Functions:\\r\\n// constructor\\r\\n// receive function (if exists)\\r\\n// fallback function (if exists)\\r\\n// external\\r\\n// public\\r\\n// internal\\r\\n// private\\r\\n// internal & private view & pure functions\\r\\n// external & public view & pure functions\\r\\n// SPDX-License-Identifier: UNLICENSED\\r\\n// Pragma\\r\\npragma solidity ^0.8.19;\\r\\n\\r\\n// Error\\r\\nerror BuyMeACoffe__SenderShouldBeAnotherAddress();\\r\\nerror BuyMeACoffe__SignedUpBefore();\\r\\nerror BuyMeACoffe__NotSignedUpBefore();\\r\\nerror BuyMeACoffe__BalanceIsZero();\\r\\nerror BuyMeACoffe__OnlyOwner();\\r\\nerror BuyMeACoffe__ValueMustBeMoreThanOneGwei();\\r\\nerror BuyMeACoffe__TransferFaild();\\r\\n\\r\\n/**@title BuyMeACoffee contract\\r\\n * @author mohammad norouzi\\r\\n * @notice This contract implements the BuyMeACoffee contract and its functionality as simple as possible\\r\\n */\\r\\ncontract BuyMeACoffee {\\r\\n    ///////////\\r\\n    // types //\\r\\n    ///////////\\r\\n\\r\\n    struct User {\\r\\n        address userAddress;\\r\\n        uint256 userBalance;\\r\\n        Memo lastMemo;\\r\\n    }\\r\\n    struct Memo {\\r\\n        address from;\\r\\n        uint256 timestamp;\\r\\n        uint256 amount;\\r\\n        string name;\\r\\n        string message;\\r\\n    }\\r\\n\\r\\n    /////////////////////\\r\\n    // State variables //\\r\\n    /////////////////////\\r\\n\\r\\n    /// @dev set a minimum amount for coffe price\\r\\n    uint256 private constant MINIMUN_COFFEE_PRICE = 1e9;\\r\\n    /// @dev Mapping of address to users struct\\r\\n    mapping(address => User) private s_users;\\r\\n\\r\\n    ////////////\\r\\n    // events //\\r\\n    ////////////\\r\\n\\r\\n    event SingUpEvent(address indexed from, uint256 timestamp);\\r\\n\\r\\n    event MemoEvent(\\r\\n        address indexed to,\\r\\n        address indexed from,\\r\\n        uint256 indexed timestamp,\\r\\n        uint256 amount,\\r\\n        string name,\\r\\n        string message\\r\\n    );\\r\\n\\r\\n    ///////////////\\r\\n    // modifiers //\\r\\n    ///////////////\\r\\n\\r\\n    modifier isUserExist(address _address) {\\r\\n        // read accounts address as currentAddress from storage\\r\\n        address currentAddress = getUser(_address);\\r\\n        // check if the _address is already signed up\\r\\n        if (currentAddress == address(0)) {\\r\\n            revert BuyMeACoffe__NotSignedUpBefore();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    ///////////////\\r\\n    // functions //\\r\\n    ///////////////\\r\\n\\r\\n    /*\\r\\n     * @notice This function will sing up the new user and emit a event\\r\\n     */\\r\\n\\r\\n    function singUp() external {\\r\\n        // check if the account is already signed up revert an error\\r\\n        address currentAddress = getUser(msg.sender);\\r\\n        if (currentAddress != address(0)) {\\r\\n            revert BuyMeACoffe__SignedUpBefore();\\r\\n        }\\r\\n\\r\\n        // create a new User and save it in the state\\r\\n        User memory newUser = User(msg.sender, 0, _createMemo(\\\"\\\", \\\"\\\", 0));\\r\\n        s_users[msg.sender] = newUser;\\r\\n\\r\\n        // emit the a event\\r\\n        emit SingUpEvent(msg.sender, block.timestamp);\\r\\n    }\\r\\n\\r\\n    function buyACoffee(\\r\\n        string memory name,\\r\\n        string memory message,\\r\\n        address to\\r\\n    ) external payable isUserExist(to) {\\r\\n        // check if msg.value is less than MINIMUN_COFFEE_PRICE revert an error\\r\\n        if (msg.sender == to)\\r\\n            revert BuyMeACoffe__SenderShouldBeAnotherAddress();\\r\\n        if (msg.value < MINIMUN_COFFEE_PRICE)\\r\\n            revert BuyMeACoffe__ValueMustBeMoreThanOneGwei();\\r\\n\\r\\n        // updata user balance\\r\\n        s_users[to].userBalance += msg.value;\\r\\n        s_users[to].lastMemo = _createMemo(name, message, msg.value);\\r\\n\\r\\n        // emit an event\\r\\n        emit MemoEvent(\\r\\n            to,\\r\\n            msg.sender,\\r\\n            block.timestamp,\\r\\n            msg.value,\\r\\n            name,\\r\\n            message\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdraw() external payable isUserExist(msg.sender) {\\r\\n        // check if balance of the contract is zero trwo an error\\r\\n\\r\\n        uint256 userBalance = s_users[msg.sender].userBalance;\\r\\n\\r\\n        if (userBalance == 0) revert BuyMeACoffe__BalanceIsZero();\\r\\n\\r\\n        s_users[msg.sender].userBalance = 0;\\r\\n\\r\\n        bool isSuccessful = payable(msg.sender).send(userBalance);\\r\\n\\r\\n        if (!isSuccessful) revert BuyMeACoffe__TransferFaild();\\r\\n    }\\r\\n\\r\\n    function getUser(address _address) public view returns (address) {\\r\\n        return s_users[_address].userAddress;\\r\\n    }\\r\\n\\r\\n    function _createMemo(\\r\\n        string memory name,\\r\\n        string memory message,\\r\\n        uint256 amount\\r\\n    ) internal view returns (Memo memory) {\\r\\n        Memo memory newMemo = Memo(\\r\\n            msg.sender,\\r\\n            block.timestamp,\\r\\n            amount,\\r\\n            name,\\r\\n            message\\r\\n        );\\r\\n        return newMemo;\\r\\n    }\\r\\n\\r\\n    function getBalance()\\r\\n        external\\r\\n        view\\r\\n        isUserExist(msg.sender)\\r\\n        returns (uint256)\\r\\n    {\\r\\n        return s_users[msg.sender].userBalance;\\r\\n    }\\r\\n\\r\\n    function getLastMemo()\\r\\n        external\\r\\n        view\\r\\n        isUserExist(msg.sender)\\r\\n        returns (Memo memory)\\r\\n    {\\r\\n        return s_users[msg.sender].lastMemo;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x677d40885b54676c1486eb265441abe06cc813f1b2718c1bb0350969aa04c80c\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061140a806100206000396000f3fe6080604052600436106100555760003560e01c80630c4995581461005a57806312065fe01461007657806314dde3cb146100a15780633ccfd60b146100b85780636f77926b146100c2578063acff45e9146100ff575b600080fd5b610074600480360381019061006f9190610db2565b61012a565b005b34801561008257600080fd5b5061008b6103e0565b6040516100989190610e56565b60405180910390f35b3480156100ad57600080fd5b506100b661049f565b005b6100c06106e8565b005b3480156100ce57600080fd5b506100e960048036038101906100e49190610e71565b610899565b6040516100f69190610ead565b60405180910390f35b34801561010b57600080fd5b50610114610904565b6040516101219190610fe2565b60405180910390f35b80600061013682610899565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361019e576040517f0520de9000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610203576040517fce7a226a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b633b9aca00341015610241576040517fd8da6c3000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b346000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546102929190611033565b925050819055506102a4858534610b61565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030190816103559190611273565b50608082015181600401908161036b9190611273565b50905050423373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fd11821dbf66364cfc76a3119ed508bee7e9b0c309f8ffd133657e455606a46773489896040516103d19392919061138f565b60405180910390a45050505050565b60003360006103ee82610899565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610456576040517f0520de9000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549250505090565b60006104aa33610899565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610512576040517fa386b8a500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200161056c60405180602001604052806000815250604051806020016040528060008152506000610b61565b8152509050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301908161067a9190611273565b5060808201518160040190816106909190611273565b5050509050503373ffffffffffffffffffffffffffffffffffffffff167fc61110b9f153350c03fa5e872a75db3e735d366d387c364d79dcef7fdb309fe0426040516106dc9190610e56565b60405180910390a25050565b3360006106f482610899565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361075c576040517f0520de9000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050600081036107dc576040517fc4bbb36b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555060003373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050905080610893576040517fb71e489800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61090c610bb5565b33600061091882610899565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610980576040517f0520de9000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382018054610a4690611096565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7290611096565b8015610abf5780601f10610a9457610100808354040283529160200191610abf565b820191906000526020600020905b815481529060010190602001808311610aa257829003601f168201915b50505050508152602001600482018054610ad890611096565b80601f0160208091040260200160405190810160405280929190818152602001828054610b0490611096565b8015610b515780601f10610b2657610100808354040283529160200191610b51565b820191906000526020600020905b815481529060010190602001808311610b3457829003601f168201915b5050505050815250509250505090565b610b69610bb5565b60006040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001428152602001848152602001868152602001858152509050809150509392505050565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160608152602001606081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610c6182610c18565b810181811067ffffffffffffffff82111715610c8057610c7f610c29565b5b80604052505050565b6000610c93610bfa565b9050610c9f8282610c58565b919050565b600067ffffffffffffffff821115610cbf57610cbe610c29565b5b610cc882610c18565b9050602081019050919050565b82818337600083830152505050565b6000610cf7610cf284610ca4565b610c89565b905082815260208101848484011115610d1357610d12610c13565b5b610d1e848285610cd5565b509392505050565b600082601f830112610d3b57610d3a610c0e565b5b8135610d4b848260208601610ce4565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d7f82610d54565b9050919050565b610d8f81610d74565b8114610d9a57600080fd5b50565b600081359050610dac81610d86565b92915050565b600080600060608486031215610dcb57610dca610c04565b5b600084013567ffffffffffffffff811115610de957610de8610c09565b5b610df586828701610d26565b935050602084013567ffffffffffffffff811115610e1657610e15610c09565b5b610e2286828701610d26565b9250506040610e3386828701610d9d565b9150509250925092565b6000819050919050565b610e5081610e3d565b82525050565b6000602082019050610e6b6000830184610e47565b92915050565b600060208284031215610e8757610e86610c04565b5b6000610e9584828501610d9d565b91505092915050565b610ea781610d74565b82525050565b6000602082019050610ec26000830184610e9e565b92915050565b610ed181610d74565b82525050565b610ee081610e3d565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f20578082015181840152602081019050610f05565b60008484015250505050565b6000610f3782610ee6565b610f418185610ef1565b9350610f51818560208601610f02565b610f5a81610c18565b840191505092915050565b600060a083016000830151610f7d6000860182610ec8565b506020830151610f906020860182610ed7565b506040830151610fa36040860182610ed7565b5060608301518482036060860152610fbb8282610f2c565b91505060808301518482036080860152610fd58282610f2c565b9150508091505092915050565b60006020820190508181036000830152610ffc8184610f65565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061103e82610e3d565b915061104983610e3d565b925082820190508082111561106157611060611004565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110ae57607f821691505b6020821081036110c1576110c0611067565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026111297fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826110ec565b61113386836110ec565b95508019841693508086168417925050509392505050565b6000819050919050565b600061117061116b61116684610e3d565b61114b565b610e3d565b9050919050565b6000819050919050565b61118a83611155565b61119e61119682611177565b8484546110f9565b825550505050565b600090565b6111b36111a6565b6111be818484611181565b505050565b5b818110156111e2576111d76000826111ab565b6001810190506111c4565b5050565b601f821115611227576111f8816110c7565b611201846110dc565b81016020851015611210578190505b61122461121c856110dc565b8301826111c3565b50505b505050565b600082821c905092915050565b600061124a6000198460080261122c565b1980831691505092915050565b60006112638383611239565b9150826002028217905092915050565b61127c82610ee6565b67ffffffffffffffff81111561129557611294610c29565b5b61129f8254611096565b6112aa8282856111e6565b600060209050601f8311600181146112dd57600084156112cb578287015190505b6112d58582611257565b86555061133d565b601f1984166112eb866110c7565b60005b82811015611313578489015182556001820191506020850194506020810190506112ee565b86831015611330578489015161132c601f891682611239565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b600061136182610ee6565b61136b8185611345565b935061137b818560208601610f02565b61138481610c18565b840191505092915050565b60006060820190506113a46000830186610e47565b81810360208301526113b68185611356565b905081810360408301526113ca8184611356565b905094935050505056fea2646970667358221220170313058015a2de23a17cc1d1543c583bded87523a5c3792d8eaa7e2e071f5164736f6c63430008130033",
  "deployedBytecode": "",
  "devdoc": {
    "author": "mohammad norouzi",
    "kind": "dev",
    "methods": {},
    "stateVariables": {
      "MINIMUN_COFFEE_PRICE": {
        "details": "set a minimum amount for coffe price"
      },
      "s_users": {
        "details": "Mapping of address to users struct"
      }
    },
    "title": "BuyMeACoffee contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract implements the BuyMeACoffee contract and its functionality as simple as possible",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 45,
        "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
        "label": "s_users",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_struct(User)24_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(User)24_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct BuyMeACoffee.User)",
        "numberOfBytes": "32",
        "value": "t_struct(User)24_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Memo)35_storage": {
        "encoding": "inplace",
        "label": "struct BuyMeACoffee.Memo",
        "members": [
          {
            "astId": 26,
            "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
            "label": "from",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 28,
            "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
            "label": "timestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 30,
            "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
            "label": "amount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 32,
            "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
            "label": "name",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 34,
            "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
            "label": "message",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(User)24_storage": {
        "encoding": "inplace",
        "label": "struct BuyMeACoffee.User",
        "members": [
          {
            "astId": 18,
            "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
            "label": "userAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 20,
            "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
            "label": "userBalance",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 23,
            "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
            "label": "lastMemo",
            "offset": 0,
            "slot": "2",
            "type": "t_struct(Memo)35_storage"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}