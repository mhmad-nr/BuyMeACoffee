{
  "address": "0xCEcC7E566F88bE0112110865f82E3bbbac58B5F4",
  "abi": [
    {
      "inputs": [],
      "name": "BuyMeACoffe__BalanceIsZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BuyMeACoffe__NotSignedUpBefore",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BuyMeACoffe__SignedUpBefore",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BuyMeACoffe__TransferFaild",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BuyMeACoffe__ValueMustBeMoreThanOneGwei",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "MemoEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "SingUpEvent",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "buyACoffee",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastMemo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "message",
              "type": "string"
            }
          ],
          "internalType": "struct BuyMeACoffee.Memo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "singUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xcbebfa3466b68bedee63ef2ddbc6a9c3cbe4362bcfdc54ca7d41794cd77edc37",
  "receipt": {
    "to": null,
    "from": "0x6bEDAb3A759245A16ABeb16e2142629828C8c782",
    "contractAddress": "0xCEcC7E566F88bE0112110865f82E3bbbac58B5F4",
    "transactionIndex": 81,
    "gasUsed": "1098514",
    "logsBloom": "0x
    "blockHash": "0x38c6e4e181ea6caccf7665d3e89b146534b7dda74ccc73e5acd9bdfa6b186bcf",
    "transactionHash": "0xcbebfa3466b68bedee63ef2ddbc6a9c3cbe4362bcfdc54ca7d41794cd77edc37",
    "logs": [],
    "blockNumber": 5687988,
    "cumulativeGasUsed": "15773623",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "82946a50edb8370ee90e946c26d739b5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BuyMeACoffe__BalanceIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BuyMeACoffe__NotSignedUpBefore\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BuyMeACoffe__SignedUpBefore\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BuyMeACoffe__TransferFaild\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BuyMeACoffe__ValueMustBeMoreThanOneGwei\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"MemoEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"SingUpEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"buyACoffee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastMemo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"internalType\":\"struct BuyMeACoffee.Memo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"singUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"mohammad norouzi\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"MINIMUN_COFFEE_PRICE\":{\"details\":\"set a minimum amount for coffe price\"},\"s_users\":{\"details\":\"Mapping of address to users struct\"}},\"title\":\"BuyMeACoffee contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract implements the BuyMeACoffee contract and its functionality as simple as possible\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BuyMeACoffee.sol\":\"BuyMeACoffee\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BuyMeACoffee.sol\":{\"content\":\"// Layout of Contract:\\r\\n// version\\r\\n// imports\\r\\n// errors\\r\\n// interfaces, libraries, contracts\\r\\n// Type declarations\\r\\n// State variables\\r\\n// Events\\r\\n// Modifiers\\r\\n// Functions\\r\\n\\r\\n// Layout of Functions:\\r\\n// constructor\\r\\n// receive function (if exists)\\r\\n// fallback function (if exists)\\r\\n// external\\r\\n// public\\r\\n// internal\\r\\n// private\\r\\n// internal & private view & pure functions\\r\\n// external & public view & pure functions\\r\\n// SPDX-License-Identifier: UNLICENSED\\r\\n// Pragma\\r\\npragma solidity ^0.8.19;\\r\\n\\r\\n// Error\\r\\nerror BuyMeACoffe__SignedUpBefore();\\r\\nerror BuyMeACoffe__NotSignedUpBefore();\\r\\nerror BuyMeACoffe__BalanceIsZero();\\r\\nerror BuyMeACoffe__OnlyOwner();\\r\\nerror BuyMeACoffe__ValueMustBeMoreThanOneGwei();\\r\\nerror BuyMeACoffe__TransferFaild();\\r\\n\\r\\n/**@title BuyMeACoffee contract\\r\\n * @author mohammad norouzi\\r\\n * @notice This contract implements the BuyMeACoffee contract and its functionality as simple as possible\\r\\n */\\r\\ncontract BuyMeACoffee {\\r\\n    ///////////\\r\\n    // types //\\r\\n    ///////////\\r\\n\\r\\n    struct User {\\r\\n        address userAddress;\\r\\n        uint256 userBalance;\\r\\n        Memo lastMemo;\\r\\n    }\\r\\n    struct Memo {\\r\\n        address from;\\r\\n        uint256 timestamp;\\r\\n        uint256 amount;\\r\\n        string name;\\r\\n        string message;\\r\\n    }\\r\\n\\r\\n    /////////////////////\\r\\n    // State variables //\\r\\n    /////////////////////\\r\\n\\r\\n    /// @dev set a minimum amount for coffe price\\r\\n    uint256 private constant MINIMUN_COFFEE_PRICE = 1e9;\\r\\n    /// @dev Mapping of address to users struct\\r\\n    mapping(address => User) private s_users;\\r\\n\\r\\n    ////////////\\r\\n    // events //\\r\\n    ////////////\\r\\n\\r\\n    event SingUpEvent(address indexed from, uint256 timestamp);\\r\\n\\r\\n    event MemoEvent(\\r\\n        address indexed to,\\r\\n        address indexed from,\\r\\n        uint256 indexed timestamp,\\r\\n        uint256 amount,\\r\\n        string name,\\r\\n        string message\\r\\n    );\\r\\n\\r\\n    ///////////////\\r\\n    // modifiers //\\r\\n    ///////////////\\r\\n\\r\\n    modifier isUserExist(address _address) {\\r\\n        // read accounts address as currentAddress from storage\\r\\n        address currentAddress = _getUser(_address);\\r\\n        // check if the _address is already signed up\\r\\n        if (currentAddress == address(0)) {\\r\\n            revert BuyMeACoffe__NotSignedUpBefore();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    ///////////////\\r\\n    // functions //\\r\\n    ///////////////\\r\\n\\r\\n    /*\\r\\n     * @notice This function will sing up the new user and emit a event\\r\\n     */\\r\\n\\r\\n    function singUp() external {\\r\\n        // check if the account is already signed up revert an error\\r\\n        address currentAddress = _getUser(msg.sender);\\r\\n        if (currentAddress != address(0)) {\\r\\n            revert BuyMeACoffe__SignedUpBefore();\\r\\n        }\\r\\n\\r\\n        // create a new User and save it in the state\\r\\n        User memory newUser = User(msg.sender, 0, _createMemo(\\\"\\\", \\\"\\\", 0));\\r\\n        s_users[msg.sender] = newUser;\\r\\n\\r\\n        // emit the a event\\r\\n        emit SingUpEvent(msg.sender, block.timestamp);\\r\\n    }\\r\\n\\r\\n    function buyACoffee(\\r\\n        string memory name,\\r\\n        string memory message,\\r\\n        address to\\r\\n    ) external payable isUserExist(to) {\\r\\n        // check if msg.value is less than MINIMUN_COFFEE_PRICE revert an error\\r\\n        if (msg.value < MINIMUN_COFFEE_PRICE)\\r\\n            revert BuyMeACoffe__ValueMustBeMoreThanOneGwei();\\r\\n\\r\\n        // updata user balance\\r\\n        s_users[to].userBalance += msg.value;\\r\\n        s_users[to].lastMemo = _createMemo(name, message, msg.value);\\r\\n\\r\\n        // emit an event\\r\\n        emit MemoEvent(\\r\\n            to,\\r\\n            msg.sender,\\r\\n            block.timestamp,\\r\\n            msg.value,\\r\\n            name,\\r\\n            message\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdraw() external payable isUserExist(msg.sender) {\\r\\n        // check if balance of the contract is zero trwo an error\\r\\n        if (s_users[msg.sender].userBalance == 0)\\r\\n            revert BuyMeACoffe__BalanceIsZero();\\r\\n\\r\\n        bool isSuccessful = payable(msg.sender).send(\\r\\n            s_users[msg.sender].userBalance\\r\\n        );\\r\\n\\r\\n        if (!isSuccessful) revert BuyMeACoffe__TransferFaild();\\r\\n    }\\r\\n\\r\\n    function _getUser(address _address) internal view returns (address) {\\r\\n        return s_users[_address].userAddress;\\r\\n    }\\r\\n\\r\\n    function _createMemo(\\r\\n        string memory name,\\r\\n        string memory message,\\r\\n        uint256 amount\\r\\n    ) internal view returns (Memo memory) {\\r\\n        Memo memory newMemo = Memo(\\r\\n            msg.sender,\\r\\n            block.timestamp,\\r\\n            amount,\\r\\n            name,\\r\\n            message\\r\\n        );\\r\\n        return newMemo;\\r\\n    }\\r\\n\\r\\n    function getBalance()\\r\\n        external\\r\\n        view\\r\\n        isUserExist(msg.sender)\\r\\n        returns (uint256)\\r\\n    {\\r\\n        return s_users[msg.sender].userBalance;\\r\\n    }\\r\\n\\r\\n    function getLastMemo()\\r\\n        external\\r\\n        view\\r\\n        isUserExist(msg.sender)\\r\\n        returns (Memo memory)\\r\\n    {\\r\\n        return s_users[msg.sender].lastMemo;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xd941077709b27b25625f0ce7cd9be7b4801fd1c9c7a21a12dce61711e272edbe\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506112fa806100206000396000f3fe60806040526004361061004a5760003560e01c80630c4995581461004f57806312065fe01461006b57806314dde3cb146100965780633ccfd60b146100ad578063acff45e9146100b7575b600080fd5b61006960048036038101906100649190610cf9565b6100e2565b005b34801561007757600080fd5b50610080610333565b60405161008d9190610d9d565b60405180910390f35b3480156100a257600080fd5b506100ab6103f2565b005b6100b561063b565b005b3480156100c357600080fd5b506100cc6107e0565b6040516100d99190610ed2565b60405180910390f35b8060006100ee82610a3d565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610156576040517f0520de9000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b633b9aca00341015610194576040517fd8da6c3000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b346000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546101e59190610f23565b925050819055506101f7858534610aa8565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030190816102a89190611163565b5060808201518160040190816102be9190611163565b50905050423373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fd11821dbf66364cfc76a3119ed508bee7e9b0c309f8ffd133657e455606a46773489896040516103249392919061127f565b60405180910390a45050505050565b600033600061034182610a3d565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103a9576040517f0520de9000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549250505090565b60006103fd33610a3d565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610465576040517fa386b8a500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016104bf60405180602001604052806000815250604051806020016040528060008152506000610aa8565b8152509050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030190816105cd9190611163565b5060808201518160040190816105e39190611163565b5050509050503373ffffffffffffffffffffffffffffffffffffffff167fc61110b9f153350c03fa5e872a75db3e735d366d387c364d79dcef7fdb309fe04260405161062f9190610d9d565b60405180910390a25050565b33600061064782610a3d565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106af576040517f0520de9000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101540361072a576040517fc4bbb36b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff166108fc6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549081150290604051600060405180830381858888f193505050509050806107db576040517fb71e489800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6107e8610afc565b3360006107f482610a3d565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361085c576040517f0520de9000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201805461092290610f86565b80601f016020809104026020016040519081016040528092919081815260200182805461094e90610f86565b801561099b5780601f106109705761010080835404028352916020019161099b565b820191906000526020600020905b81548152906001019060200180831161097e57829003601f168201915b505050505081526020016004820180546109b490610f86565b80601f01602080910402602001604051908101604052809291908181526020018280546109e090610f86565b8015610a2d5780601f10610a0257610100808354040283529160200191610a2d565b820191906000526020600020905b815481529060010190602001808311610a1057829003601f168201915b5050505050815250509250505090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610ab0610afc565b60006040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001428152602001848152602001868152602001858152509050809150509392505050565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160608152602001606081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610ba882610b5f565b810181811067ffffffffffffffff82111715610bc757610bc6610b70565b5b80604052505050565b6000610bda610b41565b9050610be68282610b9f565b919050565b600067ffffffffffffffff821115610c0657610c05610b70565b5b610c0f82610b5f565b9050602081019050919050565b82818337600083830152505050565b6000610c3e610c3984610beb565b610bd0565b905082815260208101848484011115610c5a57610c59610b5a565b5b610c65848285610c1c565b509392505050565b600082601f830112610c8257610c81610b55565b5b8135610c92848260208601610c2b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cc682610c9b565b9050919050565b610cd681610cbb565b8114610ce157600080fd5b50565b600081359050610cf381610ccd565b92915050565b600080600060608486031215610d1257610d11610b4b565b5b600084013567ffffffffffffffff811115610d3057610d2f610b50565b5b610d3c86828701610c6d565b935050602084013567ffffffffffffffff811115610d5d57610d5c610b50565b5b610d6986828701610c6d565b9250506040610d7a86828701610ce4565b9150509250925092565b6000819050919050565b610d9781610d84565b82525050565b6000602082019050610db26000830184610d8e565b92915050565b610dc181610cbb565b82525050565b610dd081610d84565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e10578082015181840152602081019050610df5565b60008484015250505050565b6000610e2782610dd6565b610e318185610de1565b9350610e41818560208601610df2565b610e4a81610b5f565b840191505092915050565b600060a083016000830151610e6d6000860182610db8565b506020830151610e806020860182610dc7565b506040830151610e936040860182610dc7565b5060608301518482036060860152610eab8282610e1c565b91505060808301518482036080860152610ec58282610e1c565b9150508091505092915050565b60006020820190508181036000830152610eec8184610e55565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f2e82610d84565b9150610f3983610d84565b9250828201905080821115610f5157610f50610ef4565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f9e57607f821691505b602082108103610fb157610fb0610f57565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026110197fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610fdc565b6110238683610fdc565b95508019841693508086168417925050509392505050565b6000819050919050565b600061106061105b61105684610d84565b61103b565b610d84565b9050919050565b6000819050919050565b61107a83611045565b61108e61108682611067565b848454610fe9565b825550505050565b600090565b6110a3611096565b6110ae818484611071565b505050565b5b818110156110d2576110c760008261109b565b6001810190506110b4565b5050565b601f821115611117576110e881610fb7565b6110f184610fcc565b81016020851015611100578190505b61111461110c85610fcc565b8301826110b3565b50505b505050565b600082821c905092915050565b600061113a6000198460080261111c565b1980831691505092915050565b60006111538383611129565b9150826002028217905092915050565b61116c82610dd6565b67ffffffffffffffff81111561118557611184610b70565b5b61118f8254610f86565b61119a8282856110d6565b600060209050601f8311600181146111cd57600084156111bb578287015190505b6111c58582611147565b86555061122d565b601f1984166111db86610fb7565b60005b82811015611203578489015182556001820191506020850194506020810190506111de565b86831015611220578489015161121c601f891682611129565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b600061125182610dd6565b61125b8185611235565b935061126b818560208601610df2565b61127481610b5f565b840191505092915050565b60006060820190506112946000830186610d8e565b81810360208301526112a68185611246565b905081810360408301526112ba8184611246565b905094935050505056fea264697066735822122059678eb4984b5c468008e59bb9d229eb5906624c755015d88209011ce785603b64736f6c63430008130033",
  "deployedBytecode": "0x60806040526004361061004a5760003560e01c80630c4995581461004f57806312065fe01461006b57806314dde3cb146100965780633ccfd60b146100ad578063acff45e9146100b7575b600080fd5b61006960048036038101906100649190610cf9565b6100e2565b005b34801561007757600080fd5b50610080610333565b60405161008d9190610d9d565b60405180910390f35b3480156100a257600080fd5b506100ab6103f2565b005b6100b561063b565b005b3480156100c357600080fd5b506100cc6107e0565b6040516100d99190610ed2565b60405180910390f35b8060006100ee82610a3d565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610156576040517f0520de9000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b633b9aca00341015610194576040517fd8da6c3000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b346000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546101e59190610f23565b925050819055506101f7858534610aa8565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030190816102a89190611163565b5060808201518160040190816102be9190611163565b50905050423373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fd11821dbf66364cfc76a3119ed508bee7e9b0c309f8ffd133657e455606a46773489896040516103249392919061127f565b60405180910390a45050505050565b600033600061034182610a3d565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103a9576040517f0520de9000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549250505090565b60006103fd33610a3d565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610465576040517fa386b8a500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016104bf60405180602001604052806000815250604051806020016040528060008152506000610aa8565b8152509050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030190816105cd9190611163565b5060808201518160040190816105e39190611163565b5050509050503373ffffffffffffffffffffffffffffffffffffffff167fc61110b9f153350c03fa5e872a75db3e735d366d387c364d79dcef7fdb309fe04260405161062f9190610d9d565b60405180910390a25050565b33600061064782610a3d565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106af576040517f0520de9000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101540361072a576040517fc4bbb36b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff166108fc6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549081150290604051600060405180830381858888f193505050509050806107db576040517fb71e489800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6107e8610afc565b3360006107f482610a3d565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361085c576040517f0520de9000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201805461092290610f86565b80601f016020809104026020016040519081016040528092919081815260200182805461094e90610f86565b801561099b5780601f106109705761010080835404028352916020019161099b565b820191906000526020600020905b81548152906001019060200180831161097e57829003601f168201915b505050505081526020016004820180546109b490610f86565b80601f01602080910402602001604051908101604052809291908181526020018280546109e090610f86565b8015610a2d5780601f10610a0257610100808354040283529160200191610a2d565b820191906000526020600020905b815481529060010190602001808311610a1057829003601f168201915b5050505050815250509250505090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610ab0610afc565b60006040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001428152602001848152602001868152602001858152509050809150509392505050565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160608152602001606081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610ba882610b5f565b810181811067ffffffffffffffff82111715610bc757610bc6610b70565b5b80604052505050565b6000610bda610b41565b9050610be68282610b9f565b919050565b600067ffffffffffffffff821115610c0657610c05610b70565b5b610c0f82610b5f565b9050602081019050919050565b82818337600083830152505050565b6000610c3e610c3984610beb565b610bd0565b905082815260208101848484011115610c5a57610c59610b5a565b5b610c65848285610c1c565b509392505050565b600082601f830112610c8257610c81610b55565b5b8135610c92848260208601610c2b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cc682610c9b565b9050919050565b610cd681610cbb565b8114610ce157600080fd5b50565b600081359050610cf381610ccd565b92915050565b600080600060608486031215610d1257610d11610b4b565b5b600084013567ffffffffffffffff811115610d3057610d2f610b50565b5b610d3c86828701610c6d565b935050602084013567ffffffffffffffff811115610d5d57610d5c610b50565b5b610d6986828701610c6d565b9250506040610d7a86828701610ce4565b9150509250925092565b6000819050919050565b610d9781610d84565b82525050565b6000602082019050610db26000830184610d8e565b92915050565b610dc181610cbb565b82525050565b610dd081610d84565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e10578082015181840152602081019050610df5565b60008484015250505050565b6000610e2782610dd6565b610e318185610de1565b9350610e41818560208601610df2565b610e4a81610b5f565b840191505092915050565b600060a083016000830151610e6d6000860182610db8565b506020830151610e806020860182610dc7565b506040830151610e936040860182610dc7565b5060608301518482036060860152610eab8282610e1c565b91505060808301518482036080860152610ec58282610e1c565b9150508091505092915050565b60006020820190508181036000830152610eec8184610e55565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f2e82610d84565b9150610f3983610d84565b9250828201905080821115610f5157610f50610ef4565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f9e57607f821691505b602082108103610fb157610fb0610f57565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026110197fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610fdc565b6110238683610fdc565b95508019841693508086168417925050509392505050565b6000819050919050565b600061106061105b61105684610d84565b61103b565b610d84565b9050919050565b6000819050919050565b61107a83611045565b61108e61108682611067565b848454610fe9565b825550505050565b600090565b6110a3611096565b6110ae818484611071565b505050565b5b818110156110d2576110c760008261109b565b6001810190506110b4565b5050565b601f821115611117576110e881610fb7565b6110f184610fcc565b81016020851015611100578190505b61111461110c85610fcc565b8301826110b3565b50505b505050565b600082821c905092915050565b600061113a6000198460080261111c565b1980831691505092915050565b60006111538383611129565b9150826002028217905092915050565b61116c82610dd6565b67ffffffffffffffff81111561118557611184610b70565b5b61118f8254610f86565b61119a8282856110d6565b600060209050601f8311600181146111cd57600084156111bb578287015190505b6111c58582611147565b86555061122d565b601f1984166111db86610fb7565b60005b82811015611203578489015182556001820191506020850194506020810190506111de565b86831015611220578489015161121c601f891682611129565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b600061125182610dd6565b61125b8185611235565b935061126b818560208601610df2565b61127481610b5f565b840191505092915050565b60006060820190506112946000830186610d8e565b81810360208301526112a68185611246565b905081810360408301526112ba8184611246565b905094935050505056fea264697066735822122059678eb4984b5c468008e59bb9d229eb5906624c755015d88209011ce785603b64736f6c63430008130033",
  "devdoc": {
    "author": "mohammad norouzi",
    "kind": "dev",
    "methods": {},
    "stateVariables": {
      "MINIMUN_COFFEE_PRICE": {
        "details": "set a minimum amount for coffe price"
      },
      "s_users": {
        "details": "Mapping of address to users struct"
      }
    },
    "title": "BuyMeACoffee contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract implements the BuyMeACoffee contract and its functionality as simple as possible",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 43,
        "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
        "label": "s_users",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_struct(User)22_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(User)22_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct BuyMeACoffee.User)",
        "numberOfBytes": "32",
        "value": "t_struct(User)22_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Memo)33_storage": {
        "encoding": "inplace",
        "label": "struct BuyMeACoffee.Memo",
        "members": [
          {
            "astId": 24,
            "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
            "label": "from",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 26,
            "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
            "label": "timestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 28,
            "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
            "label": "amount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 30,
            "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
            "label": "name",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 32,
            "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
            "label": "message",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(User)22_storage": {
        "encoding": "inplace",
        "label": "struct BuyMeACoffee.User",
        "members": [
          {
            "astId": 16,
            "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
            "label": "userAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 18,
            "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
            "label": "userBalance",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 21,
            "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
            "label": "lastMemo",
            "offset": 0,
            "slot": "2",
            "type": "t_struct(Memo)33_storage"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}